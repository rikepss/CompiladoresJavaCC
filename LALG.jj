options
{
  STATIC = false;
  DEBUG_LOOKAHEAD = false;	
}

PARSER_BEGIN(LALG)

import java.io.*;

public class LALG
{
  public static void main(String args [])
  {
	try
	{
	   LALG parser = new LALG(System.in);
	   parser.start();
    }
     catch (ParseException e)
     {
        System.out.println(e.getMessage());
		return;
      }
      catch (TokenMgrError e)
      {
        System.out.println(e.getMessage());
		return;
	  }
  }
}

PARSER_END(LALG)

SKIP : {
 " "
|  "\n"
|  "\r"
|  <"{" (~["\n","\r"])* "}" ("\n" | "\r" | "\r\n")>
}

TOKEN : 
{
 < LPAREN : "(" >
| < RPAREN : ")" >
| < COMMA: "," >
| < DOT: "." >
}

TOKEN:
{
 < PROGRAM : "program" > 
| < VAR : "var" > 
| < CONST : "const" > 
| < REAL : "real" >
| < INTEGER : "integer" >  
| < PROCEDURE : "procedure" >
| < BEGIN : "begin" >
| < END : "end" >   
| < #DIGIT : [ "0"-"9" ] >
| < NUM : (<DIGIT>)+("."(<DIGIT>)*)?|"."(<DIGIT>)+>
| < COLON: ":" >
| < SEMICOLON : ";" >
| < READ : "read" >
| < WRITE : "write" >
| < DO : "do" >   
| < IF : "if" >
| < THEN : "then" > 
| < ELSE : "else" >
| < WHILE : "while" >
| < FOR : "for" >
| < TO : "to" > 
|  < ID: ["a"-"z","A"-"Z"] ( ["a"-"z","A"-"Z","0"-"9","_"] )* >
}

TOKEN:
{
  < PLUS : "+" >
| < MINUS : "-" >
| < MUL : "*" >
| < DIV : "/" >
| < ASSIGN : ":=" >
| < EQUALS : "=" >
| < GREATEREQUAL : ">=" >
| < LESSEREQUAL : "<=" >
| < NOTEQUAL : "<>" >
| < GREATER : ">" >
| < LESSER : "<" >

}

void start():{Token token;}
{
	(
		token = <LPAREN> {System.out.println("@(" + token.beginLine + "," + token.beginColumn + ")" + "  " + tokenImage[token.kind] + " - " + token.image);}
	|	token = <RPAREN> {System.out.println("@(" + token.beginLine + "," + token.beginColumn + ")" + "  " + tokenImage[token.kind] + " - " + token.image);}
	|	token = <COMMA> {System.out.println("@(" + token.beginLine + "," + token.beginColumn + ")" + "  " + tokenImage[token.kind] + " - " + token.image);}
	|	token = <DOT> {System.out.println("@(" + token.beginLine + "," + token.beginColumn + ")" + "  " + tokenImage[token.kind] + " - " + token.image);}	
	|	token = <PROGRAM> {System.out.println("@(" + token.beginLine + "," + token.beginColumn + ")" + "  " + tokenImage[token.kind] + " - " + token.image);}
	|	token = <VAR> {System.out.println("@(" + token.beginLine + "," + token.beginColumn + ")" + "  " + tokenImage[token.kind] + " - " + token.image);}
	|	token = <CONST> {System.out.println("@(" + token.beginLine + "," + token.beginColumn + ")" + "  " + tokenImage[token.kind] + " - " + token.image);}	
	|	token = <REAL> {System.out.println("@(" + token.beginLine + "," + token.beginColumn + ")" + "  " + tokenImage[token.kind] + " - " + token.image);}
	|	token = <INTEGER> {System.out.println("@(" + token.beginLine + "," + token.beginColumn + ")" + "  " + tokenImage[token.kind] + " - " + token.image);}
	|	token = <PROCEDURE> {System.out.println("@(" + token.beginLine + "," + token.beginColumn + ")" + "  " + tokenImage[token.kind] + " - " + token.image);}
	|	token = <BEGIN> {System.out.println("@(" + token.beginLine + "," + token.beginColumn + ")" + "  " + tokenImage[token.kind] + " - " + token.image);}	
	|	token = <END> {System.out.println("@(" + token.beginLine + "," + token.beginColumn + ")" + "  " + tokenImage[token.kind] + " - " + token.image);}
	|	token = <ID> {System.out.println("@(" + token.beginLine + "," + token.beginColumn + ")" + "  " + tokenImage[token.kind] + " - " + token.image);}
	|	token = <NUM> {System.out.println("@(" + token.beginLine + "," + token.beginColumn + ")" + "  " + tokenImage[token.kind] + " - " + token.image);}
	|	token = <COLON> {System.out.println("@(" + token.beginLine + "," + token.beginColumn + ")" + "  " + tokenImage[token.kind] + " - " + token.image);}
	|	token = <SEMICOLON> {System.out.println("@(" + token.beginLine + "," + token.beginColumn + ")" + "  " + tokenImage[token.kind] + " - " + token.image);}
	|	token = <READ> {System.out.println("@(" + token.beginLine + "," + token.beginColumn + ")" + "  " + tokenImage[token.kind] + " - " + token.image);}
	|	token = <WRITE> {System.out.println("@(" + token.beginLine + "," + token.beginColumn + ")" + "  " + tokenImage[token.kind] + " - " + token.image);}
	|	token = <DO> {System.out.println("@(" + token.beginLine + "," + token.beginColumn + ")" + "  " + tokenImage[token.kind] + " - " + token.image);}
	|	token = <IF> {System.out.println("@(" + token.beginLine + "," + token.beginColumn + ")" + "  " + tokenImage[token.kind] + " - " + token.image);}
	|	token = <THEN> {System.out.println("@(" + token.beginLine + "," + token.beginColumn + ")" + "  " + tokenImage[token.kind] + " - " + token.image);}
	|	token = <ELSE> {System.out.println("@(" + token.beginLine + "," + token.beginColumn + ")" + "  " + tokenImage[token.kind] + " - " + token.image);}
	|	token = <WHILE> {System.out.println("@(" + token.beginLine + "," + token.beginColumn + ")" + "  " + tokenImage[token.kind] + " - " + token.image);}
	|	token = <FOR> {System.out.println("@(" + token.beginLine + "," + token.beginColumn + ")" + "  " + tokenImage[token.kind] + " - " + token.image);}
	|	token = <TO> {System.out.println("@(" + token.beginLine + "," + token.beginColumn + ")" + "  " + tokenImage[token.kind] + " - " + token.image);}
	|	token = <PLUS> {System.out.println("@(" + token.beginLine + "," + token.beginColumn + ")" + "  " + tokenImage[token.kind] + " - " + token.image);}
	|	token = <MINUS> {System.out.println("@(" + token.beginLine + "," + token.beginColumn + ")" + "  " + tokenImage[token.kind] + " - " + token.image);}
	|	token = <MUL> {System.out.println("@(" + token.beginLine + "," + token.beginColumn + ")" + "  " + tokenImage[token.kind] + " - " + token.image);}
	|	token = <DIV> {System.out.println("@(" + token.beginLine + "," + token.beginColumn + ")" + "  " + tokenImage[token.kind] + " - " + token.image);}
	|	token = <ASSIGN> {System.out.println("@(" + token.beginLine + "," + token.beginColumn + ")" + "  " + tokenImage[token.kind] + " - " + token.image);}
	|	token = <EQUALS> {System.out.println("@(" + token.beginLine + "," + token.beginColumn + ")" + "  " + tokenImage[token.kind] + " - " + token.image);}
	|	token = <GREATEREQUAL> {System.out.println("@(" + token.beginLine + "," + token.beginColumn + ")" + "  " + tokenImage[token.kind] + " - " + token.image);}
	|	token = <LESSEREQUAL> {System.out.println("@(" + token.beginLine + "," + token.beginColumn + ")" + "  " + tokenImage[token.kind] + " - " + token.image);}
	|	token = <NOTEQUAL> {System.out.println("@(" + token.beginLine + "," + token.beginColumn + ")" + "  " + tokenImage[token.kind] + " - " + token.image);}
	|	token = <GREATER> {System.out.println("@(" + token.beginLine + "," + token.beginColumn + ")" + "  " + tokenImage[token.kind] + " - " + token.image);}
	|	token = <LESSER> {System.out.println("@(" + token.beginLine + "," + token.beginColumn + ")" + "  " + tokenImage[token.kind] + " - " + token.image);}
	
	)*
	<EOF>
}